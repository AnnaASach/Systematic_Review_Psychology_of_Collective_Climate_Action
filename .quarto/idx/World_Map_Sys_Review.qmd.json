{"title":"World Map: Samples of included studies","markdown":{"yaml":{"title":"World Map: Samples of included studies","subtitle":"Multiple countries per study possible","author":"A.A.S.","date":"today","format":{"html":{"theme":{"light":"flatly","dark":"darkly"},"fontsize":".9em","page-layout":"full","toc":true,"toc-depth":4,"toc-location":"left","toc-title":"Contents","toc_float":{"collapsed":false},"number-sections":false,"number-depth":4,"grid":{"sidebar-width":"150px","body-width":"1500px","margin-width":"50px","gutter-width":"1.5rem"},"smooth-scroll":true,"highlight-style":"github","date-format":"D MMMM YYYY","code-fold":false,"code-summary":"Show the code","code-overflow":"wrap","code-tools":true}},"execute":{"echo":true,"warning":false,"output":true,"error":false},"embed-resources":true,"fig-responsive":false,"standalone":true,"editor":{"markdown":{"wrap":"sentence"}}},"headingText":"Set up and load data","containsRefs":false,"markdown":"\n```{r}\n#| label: set_up\n#| output: false\n#| code-fold: true\n\n# We want to set the working directory to our folder automatically.\n\nrm(list = ls(all = TRUE)) # Clear environment\n\n#check working directory (should be project folder)\ngetwd()\n\n# Load packages\nlist_of_packages <- c(\n  \"quarto\",           # to run Quarto file\n  \"knitr\",            # to run Quarto file\n  \"rmarkdown\",        # to run Quarto file\n  \"maps\",             # for maps\n  \"countrycode\",      # for maps\n  \"tidyverse\",\n  \"dplyr\",\n  \"readxl\", \n  \"mapproj\",  # For Gall-Peters projection\n  \"paletteer\", # to create continuous color scale\n  \"ggthemes\"  # also needed for color scale in combination with paletteer\n)\n\nnew_packages <-\n  list_of_packages[!(list_of_packages %in% installed.packages()[, \"Package\"])]\nif (length(new_packages))\n  # Install any new packages\n  install.packages(new_packages)\n# Library in all packages\nlapply(list_of_packages, require, character.only = TRUE)\n\n# Clean workspace\nrm(list_of_packages, new_packages)\n\nrequire(viridis)\ntheme_set(\n  theme_void()\n  )\n\n# import data\ndata <- read_excel(\"data.xlsx\", \n    sheet = \"Data\")\nView(data)\n\n# filter only included paper \n\nexcluded <- filter(data, Include==0)\n\nView(excluded)\nnrow(excluded)\n\ntable(excluded$\"Reason to exclude\")\n\n# filter only included paper \n\nclean_data <- filter(data, Include == 1)\n\nView(clean_data)\n\n# Sanity check. Should be 230.\n\nnrow(clean_data)\n\nrm(data, excluded)\n\n# create world map coordinates\nworld_coordinates <- map_data(\"world\")\n\n# create dataframe\nmap_df <- data.frame(clean_data$`Country (of participants)`) \n\n\nmap_df <- map_df %>% \n  rename(countries = \"clean_data..Country..of.participants..\")\n\nView(map_df)\n\nls(map_df)\n\nmap_df_clean <- map_df %>%\n  mutate(countries = case_when(\n    str_detect(countries, \"Congo, Republic of the\") ~ \"Republic of Congo\",\n    str_detect(countries, \"Korea South\") ~ \"South Korea\",\n    is.na(countries) | countries == \"\" ~ \"Does not say!\", # one paper which doesn't specify where participants were from\n    TRUE ~ countries\n  ))\n\nView(map_df_clean)\n\n# Step 1: Split multi-country strings and unnest into rows\ncountry_mentions <- map_df_clean %>%\n  separate_rows(countries, sep = \",\\\\s*\") %>%\n  filter(countries != \"\") %>%\n  mutate(countries = str_trim(countries)) # remove any extra whitespace\n\n# Sanity check\n\nView(country_mentions)\nnrow(country_mentions)\n\n# Step 2: Count how many times each country is mentioned\ncountry_counts <- country_mentions %>%\n  count(countries, sort = TRUE) %>%\n  rename(country = countries, frequency = n)\n\n# Step 3: Prepare map data\nworld_map <- map_data(\"world\") %>%\n  mutate(country = region)\n\n# Standardize country names to improve joins\ncountry_counts$country_standard <- countrycode(country_counts$country, \"country.name\", \"country.name\")\n\nView(country_counts)\n```\n\n# List of frequencies\n```{r}\n#| label: do_list\n#| output: true\n#| code-fold: true\n# create table with country name and frequency\n\ntwocolumns <- select(country_counts,1:2)\n\nknitr::kable(twocolumns)\n\n```\n\n# Merge counts with map\n```{r}\n#| label: prepare_map\n#| output: true\n#| code-fold: true\n# create map\n\nworld_map$country_standard <- countrycode(world_map$country, \"country.name\", \"country.name\")\n\nView(world_map)\n\n# Step 4: Join counts to the map\nmap_with_counts <- world_map %>%\n  left_join(country_counts, by = \"country_standard\", relationship = \"many-to-many\")\n\nView(map_with_counts)\n\n```\n\n# create map\n```{r}\n#| label: do_map\n#| output: true\n#| code-fold: true\n\nblue_palette <- paletteer::paletteer_c(\"ggthemes::Blue\", 17)\n\n# Step 5: Plot the map\nclearer <- map_with_counts %>%\n  mutate(text = paste(\"Country: \", country_standard, \"\\nStudies (n): \", frequency, sep=\"\")) %>%\n  ggplot(aes(x = long, y = lat, group = group, fill = factor(frequency), text = text)) +\n  geom_polygon(linewidth=0.005, alpha=0.9) +\n  theme_void() +\n  scale_fill_manual(\n      values = blue_palette,\n      na.value = \"#f0f0f0\", \n      name=\"Number of studies\",\n      breaks = seq(85),\n      guide = guide_legend(keyheight = unit(3, units = \"mm\"),\n      keywidth=unit(10, units = \"mm\"), \n      label.position = \"bottom\", \n      title.position = 'top', \n      nrow=1)) +\n  labs(title = \"\") +\n  theme(legend.position = c(0.51, 0.09),\n        plot.title = element_text(hjust = 0.5)) +\n  coord_fixed(1.3); clearer\n\n```\n\n# Interactive map\n```{r}\n#| label: interactive_map\n#| output: true\n#| code-fold: true\n\nplotly::ggplotly(clearer)\n\nggsave(\"map.jpeg\", dpi = 700, width = 10, height = 6, units = \"in\")\n```\n","srcMarkdownNoYaml":"\n# Set up and load data\n```{r}\n#| label: set_up\n#| output: false\n#| code-fold: true\n\n# We want to set the working directory to our folder automatically.\n\nrm(list = ls(all = TRUE)) # Clear environment\n\n#check working directory (should be project folder)\ngetwd()\n\n# Load packages\nlist_of_packages <- c(\n  \"quarto\",           # to run Quarto file\n  \"knitr\",            # to run Quarto file\n  \"rmarkdown\",        # to run Quarto file\n  \"maps\",             # for maps\n  \"countrycode\",      # for maps\n  \"tidyverse\",\n  \"dplyr\",\n  \"readxl\", \n  \"mapproj\",  # For Gall-Peters projection\n  \"paletteer\", # to create continuous color scale\n  \"ggthemes\"  # also needed for color scale in combination with paletteer\n)\n\nnew_packages <-\n  list_of_packages[!(list_of_packages %in% installed.packages()[, \"Package\"])]\nif (length(new_packages))\n  # Install any new packages\n  install.packages(new_packages)\n# Library in all packages\nlapply(list_of_packages, require, character.only = TRUE)\n\n# Clean workspace\nrm(list_of_packages, new_packages)\n\nrequire(viridis)\ntheme_set(\n  theme_void()\n  )\n\n# import data\ndata <- read_excel(\"data.xlsx\", \n    sheet = \"Data\")\nView(data)\n\n# filter only included paper \n\nexcluded <- filter(data, Include==0)\n\nView(excluded)\nnrow(excluded)\n\ntable(excluded$\"Reason to exclude\")\n\n# filter only included paper \n\nclean_data <- filter(data, Include == 1)\n\nView(clean_data)\n\n# Sanity check. Should be 230.\n\nnrow(clean_data)\n\nrm(data, excluded)\n\n# create world map coordinates\nworld_coordinates <- map_data(\"world\")\n\n# create dataframe\nmap_df <- data.frame(clean_data$`Country (of participants)`) \n\n\nmap_df <- map_df %>% \n  rename(countries = \"clean_data..Country..of.participants..\")\n\nView(map_df)\n\nls(map_df)\n\nmap_df_clean <- map_df %>%\n  mutate(countries = case_when(\n    str_detect(countries, \"Congo, Republic of the\") ~ \"Republic of Congo\",\n    str_detect(countries, \"Korea South\") ~ \"South Korea\",\n    is.na(countries) | countries == \"\" ~ \"Does not say!\", # one paper which doesn't specify where participants were from\n    TRUE ~ countries\n  ))\n\nView(map_df_clean)\n\n# Step 1: Split multi-country strings and unnest into rows\ncountry_mentions <- map_df_clean %>%\n  separate_rows(countries, sep = \",\\\\s*\") %>%\n  filter(countries != \"\") %>%\n  mutate(countries = str_trim(countries)) # remove any extra whitespace\n\n# Sanity check\n\nView(country_mentions)\nnrow(country_mentions)\n\n# Step 2: Count how many times each country is mentioned\ncountry_counts <- country_mentions %>%\n  count(countries, sort = TRUE) %>%\n  rename(country = countries, frequency = n)\n\n# Step 3: Prepare map data\nworld_map <- map_data(\"world\") %>%\n  mutate(country = region)\n\n# Standardize country names to improve joins\ncountry_counts$country_standard <- countrycode(country_counts$country, \"country.name\", \"country.name\")\n\nView(country_counts)\n```\n\n# List of frequencies\n```{r}\n#| label: do_list\n#| output: true\n#| code-fold: true\n# create table with country name and frequency\n\ntwocolumns <- select(country_counts,1:2)\n\nknitr::kable(twocolumns)\n\n```\n\n# Merge counts with map\n```{r}\n#| label: prepare_map\n#| output: true\n#| code-fold: true\n# create map\n\nworld_map$country_standard <- countrycode(world_map$country, \"country.name\", \"country.name\")\n\nView(world_map)\n\n# Step 4: Join counts to the map\nmap_with_counts <- world_map %>%\n  left_join(country_counts, by = \"country_standard\", relationship = \"many-to-many\")\n\nView(map_with_counts)\n\n```\n\n# create map\n```{r}\n#| label: do_map\n#| output: true\n#| code-fold: true\n\nblue_palette <- paletteer::paletteer_c(\"ggthemes::Blue\", 17)\n\n# Step 5: Plot the map\nclearer <- map_with_counts %>%\n  mutate(text = paste(\"Country: \", country_standard, \"\\nStudies (n): \", frequency, sep=\"\")) %>%\n  ggplot(aes(x = long, y = lat, group = group, fill = factor(frequency), text = text)) +\n  geom_polygon(linewidth=0.005, alpha=0.9) +\n  theme_void() +\n  scale_fill_manual(\n      values = blue_palette,\n      na.value = \"#f0f0f0\", \n      name=\"Number of studies\",\n      breaks = seq(85),\n      guide = guide_legend(keyheight = unit(3, units = \"mm\"),\n      keywidth=unit(10, units = \"mm\"), \n      label.position = \"bottom\", \n      title.position = 'top', \n      nrow=1)) +\n  labs(title = \"\") +\n  theme(legend.position = c(0.51, 0.09),\n        plot.title = element_text(hjust = 0.5)) +\n  coord_fixed(1.3); clearer\n\n```\n\n# Interactive map\n```{r}\n#| label: interactive_map\n#| output: true\n#| code-fold: true\n\nplotly::ggplotly(clearer)\n\nggsave(\"map.jpeg\", dpi = 700, width = 10, height = 6, units = \"in\")\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","embed-resources":true,"toc":true,"toc-depth":4,"number-sections":false,"highlight-style":"github","output-file":"World_Map_Sys_Review.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.4.553","editor":{"markdown":{"wrap":"sentence"}},"title":"World Map: Samples of included studies","subtitle":"Multiple countries per study possible","author":"A.A.S.","date":"today","theme":{"light":"flatly","dark":"darkly"},"fontsize":".9em","page-layout":"full","toc-location":"left","toc-title":"Contents","toc_float":{"collapsed":false},"number-depth":4,"grid":{"sidebar-width":"150px","body-width":"1500px","margin-width":"50px","gutter-width":"1.5rem"},"smooth-scroll":true,"date-format":"D MMMM YYYY","code-summary":"Show the code"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":[]}